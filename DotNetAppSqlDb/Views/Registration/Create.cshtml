@model DotNetAppSqlDb.Models.UserRegistration
@{
    ViewBag.Title = "Create";
}

<br />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="table-bordered" style="width:650px; height: 460px; background-color: #FAF9F9;">
        <div class="form-horizontal">
            <h4>User Registration Form</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    Male:   @Html.RadioButton("Gender", "M")
                    Female: @Html.RadioButton("Gender", "F")

                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SelectedDays, htmlAttributes: new { @class = "control-label col-md-2" })
                <div>

                    <input type="checkbox" id="checkedDays" name="SelectedDaysChk" onclick="javascript:selectedDays();" value="Day 1" />
                    <label for="optionId">Day1</label>
                    <input type="checkbox" id="checkedDays" name="SelectedDaysChk" onclick="javascript:selectedDays();" value="Day 2" />
                    <label for="optionId">Day2</label>
                    <input type="checkbox" id="checkedDays" name="SelectedDaysChk" onclick="javascript:selectedDays();" value="Day 3" />
                    <label for="optionId">Day3</label>
                    <input type="hidden" id="SelectedDays" name="SelectedDays" value="" />

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AddRequest, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.AddRequest, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AddRequest, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div style="margin-left:300px;" class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Submit" class="btn btn-success" />

                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Home", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    function selectedDays() {

        var checkedDays = "";
        $.each($("input[name='SelectedDaysChk']:checked"), function () {
            checkedDays = checkedDays + ',' + $(this).val();
        });

        if (checkedDays.startsWith(",")) {
            checkedDays = checkedDays.substring(1, checkedDays.length);
        }
        document.getElementById("SelectedDays").value = checkedDays;


    }
</script>

